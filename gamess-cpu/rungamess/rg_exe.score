#!/bin/sh
#
# Rungamess execution script - SCore Version
#

#
# --------------------------------------------------------------
# Replace variables that might have different values on
# the execution host
# Note that job mode is inherited from master, but 
# name of binary is not
# --------------------------------------------------------------
#
scratchtopdir=${GAMESS_SCR}
libdir=${GAMESS_LIB}
tempdir=${GAMESS_TMP}
app=${GAMESS_PAREXE_lam:=${GAMESS_PAREXE}}

mode=master-slave
#
# --------------------------------------------------------------
# Parse file definitions to the environment
# --------------------------------------------------------------
#
use_file_directives=0
. $RUNGAMESS_DIR/rg_filedefs

#
# --------------------------------------------------------------
# Create scratch directory
# --------------------------------------------------------------
#
mkdir -p $scratchtopdir/$jobname
cd $scratchtopdir/$jobname


#
#
# --------------------------------------------------------------
# Try and establish the environment for this job
# --------------------------------------------------------------
#

job_environment=Interactive

case ${JOB_ID:=null} in
null) ;;
   *) job_environment=GridEngine;;
esac

echo rungamess : Score job environment is $job_environment

#
# --------------------------------------------------------------
# Execute GAMESS-UK
# --------------------------------------------------------------
#

case $job_environment in 

   GridEngine)
       echo Start at `date`
       echo  $executable $myargs  $datain
       case $datain in
        0) cat $homedir/$jobname.in | \
           scout -wait -F $HOME/.score/ndfile.$JOB_ID -e /tmp/scrun.$JOB_ID \
                          -nodes=$((NSLOTS-1))x2 $executable ;;
            
        1) cp  $homedir/$jobname.in datain
           scout -wait -F $HOME/.score/ndfile.$JOB_ID -e /tmp/scrun.$JOB_ID \
                    -nodes=$((NSLOTS-1))x2 $executable 
           rm -f datain
           ;;
        esac
        stat=$?
        echo End at `date`
    ;;

  Interactive)  # Take hosts from GAMESS_HOSTS
        echo rungamess: interactive Score job dir=`pwd` procs=$nprocs hostlist=$GAMESS_HOSTS
        rm -f gamess.hosts
        i=0
        lasthost=none
        for host in ${GAMESS_HOSTS}
        do
           if test $i -lt $nnodes
           then
              if test $host != $lasthost
              then
                 echo $host >> gamess.hosts
              fi
           fi
           i=`expr $i + 1`
        done

       case $datain in
        0) cat $homedir/$jobname.in | \
           scout -wait -F gamess.hosts  -e scrun -nodes=${nnodes}x2 $executable
           ;;            
        1) cp  $homedir/$jobname.in datain
           scout -wait -F gamess.hosts  -e scrun -nodes=${nnodes}x2 $executable
           rm -f datain
           ;;
        esac
        rm -f gamess.hosts
        ;;

*)  echo "Unsupported job environment for scali : $job_environment"
    exit -1;;

esac

case $stat in
   0) echo ${IDENT}: SCore MPI gamess completed;;
   *) echo ${IDENT}: failure code is $stat;  exit $stat ;;
esac

