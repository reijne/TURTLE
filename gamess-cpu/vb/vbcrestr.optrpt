
Begin optimization report for: ADDCOL

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(437,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(438,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(438,13)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(438,13)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(438,13)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(438,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CHKCON

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(464,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(464,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(464,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(469,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(471,16)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(479,17)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(468,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END
===========================================================================

Begin optimization report for: OPEN1

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7863,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ORDERNUMBS

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7884,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: COPI

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(573,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: COPL

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(598,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(598,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: COPR

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(623,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(623,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: PRCONF

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8427,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8427,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8429,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8429,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8429,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(5810,13) inlined into vbcrestr.f(8431,22)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(8432,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8432,13)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8432,13)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8432,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8443,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8444,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(8444,10)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8448,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 8448 and  line 8448
   LOOP END

   LOOP BEGIN at vbcrestr.f(8452,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 8452 and  line 8452
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8466,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8466,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 8466 and  line 8466
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8426,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5812,15) ]

   LOOP BEGIN at vbcrestr.f(5807,10) inlined into vbcrestr.f(8431,22)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5812,15) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: LEADSUP

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12480,7)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: REMDTS

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12303,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12303,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12303,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12309,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12310,12)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12310,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12316,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 12318 and  line 12318
LOOP END

LOOP BEGIN at vbcrestr.f(12316,7)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12323,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(12323,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12331,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(12333,10)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(12333,10)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(12333,10)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(12333,10)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(12333,10)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12340,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12341,12)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12341,12)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: NEWTONT

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7527,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END
===========================================================================

Begin optimization report for: ISCONF

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(6154,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 6155 and  line 6155
LOOP END

LOOP BEGIN at vbcrestr.f(6154,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: WRIT2D

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(11744,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 11745 and  line 11745
LOOP END
===========================================================================

Begin optimization report for: REDCON

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(464,10) inlined into vbcrestr.f(9127,12)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(464,10) inlined into vbcrestr.f(9127,12)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(464,10) inlined into vbcrestr.f(9127,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(469,13) inlined into vbcrestr.f(9127,12)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(471,16) inlined into vbcrestr.f(9127,12)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(479,17) inlined into vbcrestr.f(9127,12)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(9129,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(9129,12)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(9129,12)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(9129,12)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(9129,12)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(9129,12)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7916,10) inlined into vbcrestr.f(9126,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7922,13) inlined into vbcrestr.f(9126,12)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7924,36) inlined into vbcrestr.f(9126,12)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(7939,13) inlined into vbcrestr.f(9126,12)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7941,36) inlined into vbcrestr.f(9126,12)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(468,10) inlined into vbcrestr.f(9127,12)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END

LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(9128,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(9128,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SKIPL

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(10218,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10220,16)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10220,16)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10220,16)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10220,16)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10220,16)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SKIPI

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(10193,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: STORID

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10842,12)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10842,12)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10842,12)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10842,12)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10842,12)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10842,12)
<Remainder, Distributed chunk2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(10815,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at vbcrestr.f(10823,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at vbcrestr.f(10831,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: CRESTR

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(3894,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(3894,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4001,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4001,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4028,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4028,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4028,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4028,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4028,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4028,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4029,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4029,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4029,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4029,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4029,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4029,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4030,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4030,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4030,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4030,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4030,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4030,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4031,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4031,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4031,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4031,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4031,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4031,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4032,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4032,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4032,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4032,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4032,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4032,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4134,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4134,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4134,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4134,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4134,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4134,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4135,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4135,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4135,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4135,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4135,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4135,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4136,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4136,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4136,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4136,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4136,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4136,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4137,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4137,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4137,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4137,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4137,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4137,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4138,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4138,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4138,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4138,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4138,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4138,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4139,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4139,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4139,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4139,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4139,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4139,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4151,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4151,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4151,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4151,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4151,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4151,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4152,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4152,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4152,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4152,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4152,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4152,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4197,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4197,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4197,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4197,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4197,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4197,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4198,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4198,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4198,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4198,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4198,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4198,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4199,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4199,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4199,15)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4199,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4199,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4199,15)
<Remainder, Distributed chunk2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(3879,10)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: CRESTI

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(2154,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(2155,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(2155,10)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at vbcrestr.f(2155,10)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Multiversioned v3>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at vbcrestr.f(2503,16)
<Remainder, Multiversioned v3>
LOOP END

LOOP BEGIN at vbcrestr.f(2516,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(2517,19)
      remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2551,24)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2551,24)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2551,24)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2551,24)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2551,24)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2551,24)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(598,10) inlined into vbcrestr.f(2553,24)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(598,10) inlined into vbcrestr.f(2553,24)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(598,10) inlined into vbcrestr.f(2553,24)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(598,10) inlined into vbcrestr.f(2553,24)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(598,10) inlined into vbcrestr.f(2553,24)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(598,10) inlined into vbcrestr.f(2553,24)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2555,24)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2555,24)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2555,24)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2555,24)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2555,24)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2555,24)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2557,24)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2557,24)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2557,24)
<Alternate Alignment Vectorized Loop, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2557,24)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2557,24)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2557,24)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2618,21)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2618,21)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2618,21)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2618,21)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(2618,21)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(2625,24)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(2641,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 2642 and  line 2642
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2650,24)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2650,24)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2658,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2658,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2658,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2658,21)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2658,21)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2658,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10218,10) inlined into vbcrestr.f(2659,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 10221 and  line 10221
LOOP END

LOOP BEGIN at vbcrestr.f(10218,10) inlined into vbcrestr.f(2659,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2660,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 10196 and  line 10196
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2660,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2661,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2661,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2661,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2661,21)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2661,21)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2661,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2731,10)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at vbcrestr.f(2771,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 2771 and  line 2771
LOOP END

LOOP BEGIN at vbcrestr.f(2833,12)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(2834,14)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(2835,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 2838 and  line 2847
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2861,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 2862 and  line 2862
LOOP END

LOOP BEGIN at vbcrestr.f(2867,12)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(2868,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 2868 and  line 2868
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2877,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(2879,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 2883 and  line 2883
   LOOP END

   LOOP BEGIN at vbcrestr.f(2879,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 2881 and  line 2881
   LOOP END

   LOOP BEGIN at vbcrestr.f(2879,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Multiversioned v3>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at vbcrestr.f(2423,16)
<Remainder, Multiversioned v3>
LOOP END

LOOP BEGIN at vbcrestr.f(2273,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(2273,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(2273,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(2277,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(2277,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(2277,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(2300,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 2301 and  line 2301
LOOP END

LOOP BEGIN at vbcrestr.f(2300,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(464,10) inlined into vbcrestr.f(2954,15)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(464,10) inlined into vbcrestr.f(2954,15)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(464,10) inlined into vbcrestr.f(2954,15)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(469,13) inlined into vbcrestr.f(2954,15)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(471,16) inlined into vbcrestr.f(2954,15)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(479,17) inlined into vbcrestr.f(2954,15)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2954,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2954,15)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2954,15)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2954,15)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2954,15)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2954,15)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2955,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 2956 and  line 2956
LOOP END

LOOP BEGIN at vbcrestr.f(11744,10) inlined into vbcrestr.f(2970,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 11745 and  line 11745
LOOP END

LOOP BEGIN at vbcrestr.f(2978,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(6154,10) inlined into vbcrestr.f(2979,20)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 6155 and  line 6155
   LOOP END

   LOOP BEGIN at vbcrestr.f(6154,10) inlined into vbcrestr.f(2979,20)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(2985,27)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2985,27)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2985,27)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2985,27)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2985,27)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(2985,27)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(2997,13)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(3001,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 3005 and  line 3004
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(3009,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3009,18)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3009,18)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3009,18)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3009,18)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3009,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10218,10) inlined into vbcrestr.f(3010,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 10221 and  line 10221
LOOP END

LOOP BEGIN at vbcrestr.f(10218,10) inlined into vbcrestr.f(3010,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(3011,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 10196 and  line 10196
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(3011,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(3012,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3012,18)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3012,18)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3012,18)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3012,18)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(3012,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(3029,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(3029,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(3029,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(3029,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(3042,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(3044,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(3046,17)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(3046,17)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(3046,17)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(3078,7)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(11744,10) inlined into vbcrestr.f(3079,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 11745 and  line 11745
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(2457,22)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(2166,15) ]

   LOOP BEGIN at vbcrestr.f(2673,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(2487,25) ]

      LOOP BEGIN at vbcrestr.f(2601,45)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(2500,18) ]

         LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(2590,17)
            remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

            LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(2590,17)
               remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(2617,16)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(10803,23) ]

         LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(2618,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END

         LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(2618,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END

         LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(2618,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(2655,23)
         remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
      LOOP END

      LOOP BEGIN at vbcrestr.f(2663,19)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(2665,38)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(2681,18)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(2681,18)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(2750,12)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(2762,12)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(2761,19) ]
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(2408,19)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(2351,15) ]

      LOOP BEGIN at vbcrestr.f(2380,16)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(2374,19) ]

         LOOP BEGIN at vbcrestr.f(2379,16)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(2304,21)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7916,10) inlined into vbcrestr.f(2954,15)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7922,13) inlined into vbcrestr.f(2954,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7924,36) inlined into vbcrestr.f(2954,15)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(7939,13) inlined into vbcrestr.f(2954,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7941,36) inlined into vbcrestr.f(2954,15)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(468,10) inlined into vbcrestr.f(2954,15)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END

LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(2954,15)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(2954,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(3027,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END
===========================================================================

Begin optimization report for: RDISTA

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8825,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8825,10)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(8825,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8843,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(8843,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8877,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8877,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8877,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8888,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8888,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8888,13)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8832,18)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: COLINT

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(511,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 515 and  line 514
LOOP END

LOOP BEGIN at vbcrestr.f(519,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(522,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(527,21)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END

      LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(537,18)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(537,18)
      <Remainder>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(537,18)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(537,18)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(537,18)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(537,18)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(517,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(517,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: RDISTA..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8825,10)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at vbcrestr.f(8843,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(8843,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8877,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8877,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8877,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8888,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8888,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8888,13)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8832,18)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: RDSYMT

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9019,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(9019,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(9027,10)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8973,35)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at vbcrestr.f(9023,14)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9009,12) ]
LOOP END
===========================================================================

Begin optimization report for: RECONF

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9067,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9067,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9067,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9067,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9070,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9070,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9070,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9070,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(9059,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9060,32) ]

   LOOP BEGIN at vbcrestr.f(9064,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9087,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9090,21) ]

   LOOP BEGIN at vbcrestr.f(9088,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9090,21) ]
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9095,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(9097,43)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: KEKULE

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12843,7) inlined into vbcrestr.f(12576,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(12844,10) inlined into vbcrestr.f(12576,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12844,10) inlined into vbcrestr.f(12576,12)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(12844,10) inlined into vbcrestr.f(12576,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10) inlined into vbcrestr.f(12576,12)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10) inlined into vbcrestr.f(12576,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10) inlined into vbcrestr.f(12576,12)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10) inlined into vbcrestr.f(12576,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12910,10) inlined into vbcrestr.f(12576,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 12912 and  line 12916
LOOP END

LOOP BEGIN at vbcrestr.f(12599,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12600,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 12600 and  line 12600
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12609,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12610,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 12610 and  line 12610
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12619,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 12620 and  line 12620
LOOP END

LOOP BEGIN at vbcrestr.f(12619,13)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(12877,7) inlined into vbcrestr.f(12576,12)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12868,13) ]
LOOP END

LOOP BEGIN at vbcrestr.f(12901,7) inlined into vbcrestr.f(12576,12)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12897,16) ]

   LOOP BEGIN at vbcrestr.f(12899,10) inlined into vbcrestr.f(12576,12)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12897,16) ]
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12989,13) inlined into vbcrestr.f(12590,12)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12978,24) ]
LOOP END

LOOP BEGIN at vbcrestr.f(12628,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12627,18) ]
LOOP END
===========================================================================

Begin optimization report for: MAKEKEKULE

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12950,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(12963,16)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(13016,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(13016,10)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(13016,10)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(13016,10)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(13016,10)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(13003,10)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at vbcrestr.f(12989,13)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12978,24) ]
LOOP END
===========================================================================

Begin optimization report for: ALLCONF_DRV

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12196,10) inlined into vbcrestr.f(12050,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 12197 and  line 12197
LOOP END

LOOP BEGIN at vbcrestr.f(12196,10) inlined into vbcrestr.f(12050,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12208,10) inlined into vbcrestr.f(12050,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12208,10) inlined into vbcrestr.f(12050,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12228,10) inlined into vbcrestr.f(12050,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12228,10) inlined into vbcrestr.f(12050,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12239,10) inlined into vbcrestr.f(12050,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12239,10) inlined into vbcrestr.f(12050,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12250,7) inlined into vbcrestr.f(12050,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at vbcrestr.f(12196,10) inlined into vbcrestr.f(12056,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 12197 and  line 12197
LOOP END

LOOP BEGIN at vbcrestr.f(12196,10) inlined into vbcrestr.f(12056,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12208,10) inlined into vbcrestr.f(12056,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12208,10) inlined into vbcrestr.f(12056,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12228,10) inlined into vbcrestr.f(12056,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12228,10) inlined into vbcrestr.f(12056,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12239,10) inlined into vbcrestr.f(12056,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12239,10) inlined into vbcrestr.f(12056,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12250,7) inlined into vbcrestr.f(12056,15)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at vbcrestr.f(12082,20)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12082,20)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12082,20)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12127,12)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12127,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12127,12)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(12139,7)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(12261,7) inlined into vbcrestr.f(12050,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(12226,10) inlined into vbcrestr.f(12050,13)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(12225,12) inlined into vbcrestr.f(12050,13)
            remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(12261,7) inlined into vbcrestr.f(12056,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(12226,10) inlined into vbcrestr.f(12056,15)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(12225,12) inlined into vbcrestr.f(12056,15)
            remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(12112,10)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12109,19) ]

      LOOP BEGIN at vbcrestr.f(12111,12)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12109,19) ]

         LOOP BEGIN at vbcrestr.f(12107,14)
            remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

            LOOP BEGIN at vbcrestr.f(12101,16)
               remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
            LOOP END
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(12132,10)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12131,17) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: MRSDD

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(7263,24)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(7263,24)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7282,13)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7284,16)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7284,16)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7284,16)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7282,13)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(7282,13)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7282,13)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(7300,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7301,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7301,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7301,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10118,13) inlined into vbcrestr.f(7334,21)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(10118,13) inlined into vbcrestr.f(7334,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(10118,13) inlined into vbcrestr.f(7334,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(7334,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(7334,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(10141,16) inlined into vbcrestr.f(7334,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(7334,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(7334,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7334,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7334,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7334,21)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7334,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10153,16) inlined into vbcrestr.f(7334,21)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(10153,16) inlined into vbcrestr.f(7334,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(10153,16) inlined into vbcrestr.f(7334,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7723,10) inlined into vbcrestr.f(7334,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(7334,21)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(7334,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(7334,21)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(7334,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(7334,21)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(7334,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(7334,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7334,21)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7334,21)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7334,21)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7334,21)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7334,21)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(7342,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(7342,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(9860,16) inlined into vbcrestr.f(7342,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(7342,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(7342,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7342,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7342,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7342,21)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(7342,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9874,16) inlined into vbcrestr.f(7342,21)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9874,16) inlined into vbcrestr.f(7342,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9874,16) inlined into vbcrestr.f(7342,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7342,21)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7342,21)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7342,21)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7342,21)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(7342,21)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6474,10) inlined into vbcrestr.f(7488,12)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6474,10) inlined into vbcrestr.f(7488,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6474,10) inlined into vbcrestr.f(7488,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10) inlined into vbcrestr.f(7488,12)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10) inlined into vbcrestr.f(7488,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10) inlined into vbcrestr.f(7488,12)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10) inlined into vbcrestr.f(7488,12)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7273,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(8002,13) inlined into vbcrestr.f(7275,18)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(8004,36) inlined into vbcrestr.f(7275,18)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7289,13)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(7291,18) ]

   LOOP BEGIN at vbcrestr.f(7292,16)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7971,10) inlined into vbcrestr.f(7293,21)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(7973,28) inlined into vbcrestr.f(7293,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(7971,10) inlined into vbcrestr.f(7294,21)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(7973,28) inlined into vbcrestr.f(7294,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7325,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9841,15) ]

   LOOP BEGIN at vbcrestr.f(7327,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9841,15) ]

      LOOP BEGIN at vbcrestr.f(10113,10) inlined into vbcrestr.f(7334,21)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(10126,15) ]

         LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(7334,21)
            remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

            LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(7334,21)
               remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
            LOOP END
         LOOP END

         LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(7334,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END

         LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(7334,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END

         LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(7334,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(9832,10) inlined into vbcrestr.f(7342,21)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9841,15) ]

         LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(7342,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END

         LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(7342,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END

         LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(7342,21)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7356,10)
   remark #15534: loop was not vectorized: loop contains arithmetic if or computed goto. Consider using if-then-else statement.    [ vbcrestr.f(7357,19) ]

   LOOP BEGIN at vbcrestr.f(7400,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(7427,33) ]

      LOOP BEGIN at vbcrestr.f(7401,16)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(7427,33) ]

         LOOP BEGIN at vbcrestr.f(7402,19)
            remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(7427,33) ]

            LOOP BEGIN at vbcrestr.f(7404,22)
               remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(7427,33) ]
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: LOGNR

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6443,26)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6449,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(5927,10) inlined into vbcrestr.f(6441,16)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
LOOP END

LOOP BEGIN at vbcrestr.f(6442,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END

LOOP BEGIN at vbcrestr.f(6445,13)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(5927,10) inlined into vbcrestr.f(6447,22)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
   LOOP END

   LOOP BEGIN at vbcrestr.f(6448,16)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: RECONF..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9067,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9067,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9067,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9067,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9070,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9070,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9070,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9070,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(9059,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9060,32) ]

   LOOP BEGIN at vbcrestr.f(9064,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9087,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9090,21) ]

   LOOP BEGIN at vbcrestr.f(9088,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9090,21) ]
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9095,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(9097,43)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: EXCITS

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5435,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(5436,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(5436,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(5436,13)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(5436,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5446,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5447,27)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5449,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5449,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5449,15)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5449,15)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5449,15)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5449,15)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5452,27)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5454,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5454,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5454,15)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5454,15)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5454,15)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5454,15)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5460,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5461,27)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5463,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5463,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5463,15)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5463,15)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5463,15)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5463,15)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5466,27)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5468,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5468,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5468,15)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5468,15)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5468,15)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5468,15)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5479,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 5480 and  line 5481
LOOP END

LOOP BEGIN at vbcrestr.f(5479,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(5483,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 5484 and  line 5486
LOOP END

LOOP BEGIN at vbcrestr.f(5490,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 5491 and  line 5491
LOOP END

LOOP BEGIN at vbcrestr.f(5490,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5533,42)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5535,18)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5535,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5535,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5535,18)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5535,18)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5535,18)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5539,18)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5539,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5539,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5539,18)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5539,18)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5539,18)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10193,10) inlined into vbcrestr.f(5586,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(5586,10)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(5586,10)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(5586,10)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(5586,10)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10195,16) inlined into vbcrestr.f(5586,10)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5603,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(5606,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 5607 and  line 5607
   LOOP END

   LOOP BEGIN at vbcrestr.f(5606,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5617,13)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(7772,10) inlined into vbcrestr.f(5660,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7774,13) inlined into vbcrestr.f(5660,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7774,13) inlined into vbcrestr.f(5660,12)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7774,13) inlined into vbcrestr.f(5660,12)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7774,13) inlined into vbcrestr.f(5660,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7780,19) inlined into vbcrestr.f(5660,12)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(7780,19) inlined into vbcrestr.f(5660,12)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at vbcrestr.f(7780,19) inlined into vbcrestr.f(5660,12)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Peeled, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Peeled, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Alternate Alignment Vectorized Loop, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Multiversioned v3>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16) inlined into vbcrestr.f(5660,12)
   <Remainder, Multiversioned v3>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(5683,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(5685,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(5690,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5753,35)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5758,30)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5764,30)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5770,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5770,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5770,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5770,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5770,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5770,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5772,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5772,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5772,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5772,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5772,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5772,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5774,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5774,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5774,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5774,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5774,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5774,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5783,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 5784 and  line 5784
LOOP END

LOOP BEGIN at vbcrestr.f(5783,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5400,30)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5404,30)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5408,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5408,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5408,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5408,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5408,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5408,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5417,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 5418 and  line 5418
LOOP END

LOOP BEGIN at vbcrestr.f(5417,10)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(5518,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(5896,13) inlined into vbcrestr.f(5523,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5878,13) inlined into vbcrestr.f(5523,15)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(5896,13) inlined into vbcrestr.f(5524,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5878,13) inlined into vbcrestr.f(5524,15)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5559,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5567,15) ]
LOOP END

LOOP BEGIN at vbcrestr.f(5575,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5576,15) ]
LOOP END

LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(5581,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(5581,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(5583,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(5583,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5595,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(5927,10) inlined into vbcrestr.f(5596,14)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5614,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(5620,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5927,10) inlined into vbcrestr.f(5622,17)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END

      LOOP BEGIN at vbcrestr.f(5623,16)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(5626,19)
            remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(5711,18)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(5711,18)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5748,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(5896,13) inlined into vbcrestr.f(5751,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5878,13) inlined into vbcrestr.f(5751,15)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5394,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(5896,13) inlined into vbcrestr.f(5397,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5878,13) inlined into vbcrestr.f(5397,15)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: EQDET

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5121,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5131,16)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5142,23)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5152,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5158,16)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5180,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(5183,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 5184 and  line 5184
   LOOP END

   LOOP BEGIN at vbcrestr.f(5183,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5189,15)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5189,15)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5189,15)
   <Alternate Alignment Vectorized Loop, Distributed chunk1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5189,15)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5189,15)
   <Distributed chunk2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5189,15)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(5119,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(5130,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END

   LOOP BEGIN at vbcrestr.f(5140,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5151,16)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: LINDEP..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(6239,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6239,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6267,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(6268,20)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6279,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6280,16)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(6280,16)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(6280,16)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6293,16)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6293,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6297,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6299,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Alternate Alignment Vectorized Loop, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6350,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6352,16)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6352,16)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6352,16)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(6264,13)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(6276,28) ]

   LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(6273,18)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(6273,18)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6291,13)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(6327,19)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(6330,27) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PROJC..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8761,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8761,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8761,16)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: SCHMIC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9633,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9633,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9633,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9647,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9649,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9649,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9649,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9649,19)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9651,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9651,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9651,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9651,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9657,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9657,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9657,13)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9657,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(9661,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9661,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9661,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(9668,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9677,16)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(9677,16)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(9677,16)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(9677,16)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(9677,16)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(9680,16)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(9680,16)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at vbcrestr.f(9680,16)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9684,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9685,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(9685,13)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(9685,13)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(9685,13)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(9685,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9687,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(9688,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(9688,13)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at vbcrestr.f(9688,13)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9716,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(9718,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 9721 and  line 9721
   LOOP END

   LOOP BEGIN at vbcrestr.f(9718,13)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(9632,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9637,21) ]

   LOOP BEGIN at vbcrestr.f(9636,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9637,21) ]
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9644,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9659,31) ]
LOOP END
===========================================================================

Begin optimization report for: SPINEF

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7581,10) inlined into vbcrestr.f(10516,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7581,10) inlined into vbcrestr.f(10516,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7581,10) inlined into vbcrestr.f(10516,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7581,10) inlined into vbcrestr.f(10516,15)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7581,10) inlined into vbcrestr.f(10516,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10) inlined into vbcrestr.f(10516,15)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10) inlined into vbcrestr.f(10516,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10) inlined into vbcrestr.f(10516,15)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10) inlined into vbcrestr.f(10516,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4287,10) inlined into vbcrestr.f(10546,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(4287,10) inlined into vbcrestr.f(10546,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4291,10) inlined into vbcrestr.f(10546,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4291,10) inlined into vbcrestr.f(10546,12)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4291,10) inlined into vbcrestr.f(10546,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4346,19) inlined into vbcrestr.f(10546,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4346,19) inlined into vbcrestr.f(10546,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4346,19) inlined into vbcrestr.f(10546,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4346,19) inlined into vbcrestr.f(10546,12)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4346,19) inlined into vbcrestr.f(10546,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(4354,19) inlined into vbcrestr.f(10546,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(4354,19) inlined into vbcrestr.f(10546,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4358,19) inlined into vbcrestr.f(10546,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4358,19) inlined into vbcrestr.f(10546,12)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4358,19) inlined into vbcrestr.f(10546,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4374,16) inlined into vbcrestr.f(10546,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4374,16) inlined into vbcrestr.f(10546,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4374,16) inlined into vbcrestr.f(10546,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4374,16) inlined into vbcrestr.f(10546,12)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4374,16) inlined into vbcrestr.f(10546,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10553,11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10553,11)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(10553,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10556,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 10559 and  line 10569
LOOP END

LOOP BEGIN at vbcrestr.f(10556,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 10564 and  line 10566
LOOP END

LOOP BEGIN at vbcrestr.f(10556,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 10564 and  line 10566
LOOP END

LOOP BEGIN at vbcrestr.f(10576,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 10579 and  line 10582
LOOP END

LOOP BEGIN at vbcrestr.f(10576,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 10577 and  line 10577
LOOP END

LOOP BEGIN at vbcrestr.f(10576,11)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(10591,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(11744,10) inlined into vbcrestr.f(10630,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 11745 and  line 11745
LOOP END

LOOP BEGIN at vbcrestr.f(11744,10) inlined into vbcrestr.f(10644,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 11745 and  line 11745
LOOP END

LOOP BEGIN at vbcrestr.f(11744,10) inlined into vbcrestr.f(10656,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 11745 and  line 11745
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(10669,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(8205,13) inlined into vbcrestr.f(10669,12)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8205,13) inlined into vbcrestr.f(10669,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8205,13) inlined into vbcrestr.f(10669,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8219,19) inlined into vbcrestr.f(10669,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8219,19) inlined into vbcrestr.f(10669,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8219,19) inlined into vbcrestr.f(10669,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8219,19) inlined into vbcrestr.f(10669,12)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8219,19) inlined into vbcrestr.f(10669,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8243,22) inlined into vbcrestr.f(10669,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8243,22) inlined into vbcrestr.f(10669,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8243,22) inlined into vbcrestr.f(10669,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8243,22) inlined into vbcrestr.f(10669,12)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8243,22) inlined into vbcrestr.f(10669,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8256,22) inlined into vbcrestr.f(10669,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 8257 and  line 8257
LOOP END

LOOP BEGIN at vbcrestr.f(8256,22) inlined into vbcrestr.f(10669,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8269,10) inlined into vbcrestr.f(10669,12)
<Distributed chunk1>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8298,13) inlined into vbcrestr.f(10669,12)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(8299,16) inlined into vbcrestr.f(10669,12)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at vbcrestr.f(8309,19) inlined into vbcrestr.f(10669,12)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

            LOOP BEGIN at vbcrestr.f(8333,29) inlined into vbcrestr.f(10669,12)
               remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8269,10) inlined into vbcrestr.f(10669,12)
<Distributed chunk2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8274,13) inlined into vbcrestr.f(10669,12)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(8281,23) inlined into vbcrestr.f(10669,12)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(10697,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(10962,19) inlined into vbcrestr.f(10697,15)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(10962,19) inlined into vbcrestr.f(10697,15)
   remark #15301: REVERSED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(10962,19) inlined into vbcrestr.f(10697,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(10708,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(10713,16)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 10714 and  line 10714
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10728,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(10735,16)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 10736 and  line 10736
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(10761,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(4500,13) inlined into vbcrestr.f(10761,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 4512 and  line 4506
LOOP END

LOOP BEGIN at vbcrestr.f(4519,13) inlined into vbcrestr.f(10761,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 4524 and  line 4526
LOOP END

LOOP BEGIN at vbcrestr.f(4519,13) inlined into vbcrestr.f(10761,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(11744,10) inlined into vbcrestr.f(10771,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 11745 and  line 11745
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(4383,7) inlined into vbcrestr.f(10546,12)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(4315,10) inlined into vbcrestr.f(10546,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(4330,36) inlined into vbcrestr.f(10546,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10616,9)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(10588,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8073,10) inlined into vbcrestr.f(10635,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(8079,13) inlined into vbcrestr.f(10635,12)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(8088,16) inlined into vbcrestr.f(10635,12)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END

      LOOP BEGIN at vbcrestr.f(8097,39) inlined into vbcrestr.f(10635,12)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8191,10) inlined into vbcrestr.f(10669,12)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(8212,13) inlined into vbcrestr.f(10669,12)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(8232,51) inlined into vbcrestr.f(10669,12)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10903,10) inlined into vbcrestr.f(10697,15)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(10907,13) inlined into vbcrestr.f(10697,15)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

      LOOP BEGIN at vbcrestr.f(10908,16) inlined into vbcrestr.f(10697,15)
         remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

         LOOP BEGIN at vbcrestr.f(10919,19) inlined into vbcrestr.f(10697,15)
            remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

            LOOP BEGIN at vbcrestr.f(10927,25) inlined into vbcrestr.f(10697,15)
               remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(4447,10) inlined into vbcrestr.f(10761,12)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(4451,19) ]

   LOOP BEGIN at vbcrestr.f(4448,10) inlined into vbcrestr.f(10761,12)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(4451,19) ]

      LOOP BEGIN at vbcrestr.f(4466,13) inlined into vbcrestr.f(10761,12)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END

      LOOP BEGIN at vbcrestr.f(4484,13) inlined into vbcrestr.f(10761,12)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: WRIT4D

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(11779,10)
   remark #15301: BLOCK WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(11779,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(11780,10)
   remark #15301: BLOCK WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(11780,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(11781,10)
   remark #15301: BLOCK WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(11781,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(11784,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(11785,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(11786,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between  line 11788 and  line 11795
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: STLEAD

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12413,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(12415,11)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(12415,11)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(12415,11)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Alternate Alignment Vectorized Loop, Distributed chunk2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12419,13)
   <Remainder, Distributed chunk2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12425,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12425,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12430,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between  line 12432 and  line 12432
   LOOP END

   LOOP BEGIN at vbcrestr.f(12430,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12436,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12436,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12446,11)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12446,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12446,11)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(12446,11)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12451,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(12451,9)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12451,9)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(12451,9)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12451,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(12407,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: EXCITC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5252,15)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5253,15)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5256,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5256,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5256,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5256,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5256,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5256,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5258,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5258,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5258,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5258,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5258,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5258,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5262,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5262,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5262,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5262,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5262,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5262,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5264,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5264,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5264,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5264,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5264,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5264,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5276,27)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5277,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5277,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5277,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5277,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5277,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5277,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5279,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5279,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5279,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5279,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5279,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5279,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5290,15)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5291,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5291,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5291,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5291,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5291,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5291,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5293,23)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5296,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5296,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5296,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5296,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5296,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5296,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5298,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5298,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5298,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5298,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5298,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5298,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5301,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5301,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5301,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5301,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5301,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5301,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5303,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5303,15)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5303,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5303,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5303,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5303,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6104,10) inlined into vbcrestr.f(5243,15)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5244,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5244,12)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5244,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5244,12)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5244,12)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5244,12)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DOUBS

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4956,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4957,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4958,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4959,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(4980,19)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(4980,19)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4980,19)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4988,24)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(5011,15)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(5012,15)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(5017,17)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at vbcrestr.f(5023,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(5025,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(5033,27)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END

      LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5039,24)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(5039,24)
      <Remainder>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5039,24)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5039,24)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5039,24)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(5039,24)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(5045,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(5045,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(5045,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7723,10) inlined into vbcrestr.f(5052,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(5052,15)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(5052,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(5052,15)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(5052,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(5052,15)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(5052,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(5052,15)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5061,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5061,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5061,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5061,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(5061,15)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(5065,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(5065,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(5065,13)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(4952,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(4965,15) ]

   LOOP BEGIN at vbcrestr.f(4968,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(5927,10) inlined into vbcrestr.f(4989,24)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END

      LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(5009,18)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(5009,18)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(5061,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(5061,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(5061,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DOUBC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4677,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4678,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4679,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4680,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4697,24)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4711,15)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at vbcrestr.f(4729,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4731,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(4737,27)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END

      LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(4743,24)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(4743,24)
      <Remainder>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(4743,24)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(4743,24)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(4743,24)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(4743,24)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(4751,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(4751,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4751,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4764,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4764,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4764,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4764,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(4764,15)
<Remainder, Distributed chunk2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(4672,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(4688,15) ]

   LOOP BEGIN at vbcrestr.f(4690,13)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

      LOOP BEGIN at vbcrestr.f(5927,10) inlined into vbcrestr.f(4698,24)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(4764,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(4764,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(4764,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PROJC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8761,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8761,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8761,16)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8755,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(8765,15) ]
LOOP END
===========================================================================

Begin optimization report for: REMRED

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9288,18)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(8530,10) inlined into vbcrestr.f(9312,18)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8530,10) inlined into vbcrestr.f(9312,18)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8530,10) inlined into vbcrestr.f(9312,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8538,10) inlined into vbcrestr.f(9312,18)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8539,13) inlined into vbcrestr.f(9312,18)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8539,13) inlined into vbcrestr.f(9312,18)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8539,13) inlined into vbcrestr.f(9312,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8538,10) inlined into vbcrestr.f(9312,18)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(8538,10) inlined into vbcrestr.f(9312,18)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8538,10) inlined into vbcrestr.f(9312,18)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(8548,10) inlined into vbcrestr.f(9312,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8549,13) inlined into vbcrestr.f(9312,18)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(9312,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(9312,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(9312,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(6239,10) inlined into vbcrestr.f(9324,18)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6239,10) inlined into vbcrestr.f(9324,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6252,16) inlined into vbcrestr.f(9324,18)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6253,19) inlined into vbcrestr.f(9324,18)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6253,19) inlined into vbcrestr.f(9324,18)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6253,19) inlined into vbcrestr.f(9324,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6252,16) inlined into vbcrestr.f(9324,18)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6252,16) inlined into vbcrestr.f(9324,18)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6252,16) inlined into vbcrestr.f(9324,18)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6267,16) inlined into vbcrestr.f(9324,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(9324,18)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6279,13) inlined into vbcrestr.f(9324,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6279,13) inlined into vbcrestr.f(9324,18)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6279,13) inlined into vbcrestr.f(9324,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6293,16) inlined into vbcrestr.f(9324,18)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6293,16) inlined into vbcrestr.f(9324,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6297,16) inlined into vbcrestr.f(9324,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6299,19) inlined into vbcrestr.f(9324,18)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19) inlined into vbcrestr.f(9324,18)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19) inlined into vbcrestr.f(9324,18)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19) inlined into vbcrestr.f(9324,18)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19) inlined into vbcrestr.f(9324,18)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19) inlined into vbcrestr.f(9324,18)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19) inlined into vbcrestr.f(9324,18)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19) inlined into vbcrestr.f(9324,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16) inlined into vbcrestr.f(9324,18)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16) inlined into vbcrestr.f(9324,18)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16) inlined into vbcrestr.f(9324,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19) inlined into vbcrestr.f(9324,18)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19) inlined into vbcrestr.f(9324,18)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19) inlined into vbcrestr.f(9324,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19) inlined into vbcrestr.f(9324,18)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19) inlined into vbcrestr.f(9324,18)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19) inlined into vbcrestr.f(9324,18)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19) inlined into vbcrestr.f(9324,18)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19) inlined into vbcrestr.f(9324,18)
<Alternate Alignment Vectorized Loop, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19) inlined into vbcrestr.f(9324,18)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6350,10) inlined into vbcrestr.f(9324,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6352,16) inlined into vbcrestr.f(9324,18)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6352,16) inlined into vbcrestr.f(9324,18)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6352,16) inlined into vbcrestr.f(9324,18)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9324,18)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9324,18)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9324,18)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9324,18)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9324,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9336,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9336,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9336,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9349,18)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9349,18)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9349,18)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9358,18)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9358,18)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9358,18)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9361,18)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9361,18)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9361,18)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9371,18)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9371,18)
<Multiversioned v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9371,18)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at vbcrestr.f(9383,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9383,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9383,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(9433,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9433,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9433,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9447,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9447,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9447,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9447,15)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9447,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9448,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9448,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9448,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9448,15)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9448,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9449,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9449,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9449,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9449,15)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9449,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9450,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9450,15)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9450,15)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9450,15)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(623,10) inlined into vbcrestr.f(9450,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9417,19)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(9417,19)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(9417,19)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(9391,17)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(8546,12) ]

   LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(9312,18)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(9312,18)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(6246,10) inlined into vbcrestr.f(9324,18)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(6264,13) inlined into vbcrestr.f(9324,18)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(6276,28) ]

         LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(9324,18)
            remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

            LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(9324,18)
               remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(6291,13) inlined into vbcrestr.f(9324,18)
         remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

         LOOP BEGIN at vbcrestr.f(6327,19) inlined into vbcrestr.f(9324,18)
            remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(6330,27) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(9395,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(9395,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9414,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(9427,23)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: TAPE15

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(11354,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at vbcrestr.f(11359,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(11360,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 11361 and  line 11361
   LOOP END

   LOOP BEGIN at vbcrestr.f(11360,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(11367,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 11369 and  line 11369
LOOP END

LOOP BEGIN at vbcrestr.f(11377,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(11377,9)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(11377,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PRI..0

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8646,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 8648 and  line 8648
LOOP END

LOOP BEGIN at vbcrestr.f(8660,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 8661 and  line 8662
LOOP END

LOOP BEGIN at vbcrestr.f(8670,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 8671 and  line 8671
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8640,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(8667,15) ]
LOOP END
===========================================================================

Begin optimization report for: CRESTD

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(1477,9)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at vbcrestr.f(1482,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(1483,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 1484 and  line 1484
   LOOP END

   LOOP BEGIN at vbcrestr.f(1483,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(1491,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 1493 and  line 1493
LOOP END

LOOP BEGIN at vbcrestr.f(1514,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(1514,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(1514,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(1522,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(1523,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(1523,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(1523,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(1542,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 1542 and  line 1542
LOOP END

LOOP BEGIN at vbcrestr.f(1542,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 1542 and  line 1542
LOOP END

LOOP BEGIN at vbcrestr.f(1550,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 1551 and  line 1551
LOOP END

LOOP BEGIN at vbcrestr.f(1582,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(1582,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(1582,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12303,10) inlined into vbcrestr.f(1615,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12303,10) inlined into vbcrestr.f(1615,18)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12303,10) inlined into vbcrestr.f(1615,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12309,10) inlined into vbcrestr.f(1615,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12310,12) inlined into vbcrestr.f(1615,18)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12310,12) inlined into vbcrestr.f(1615,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12316,7) inlined into vbcrestr.f(1615,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 12318 and  line 12318
LOOP END

LOOP BEGIN at vbcrestr.f(12316,7) inlined into vbcrestr.f(1615,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12323,10) inlined into vbcrestr.f(1615,18)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(12323,10) inlined into vbcrestr.f(1615,18)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12331,10) inlined into vbcrestr.f(1615,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(12333,10) inlined into vbcrestr.f(1615,18)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(12333,10) inlined into vbcrestr.f(1615,18)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(12333,10) inlined into vbcrestr.f(1615,18)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(12333,10) inlined into vbcrestr.f(1615,18)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(12333,10) inlined into vbcrestr.f(1615,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12340,10) inlined into vbcrestr.f(1615,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(12341,12) inlined into vbcrestr.f(1615,18)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(12341,12) inlined into vbcrestr.f(1615,18)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(1651,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(1653,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(1653,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(1653,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(1653,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(1666,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(1670,16)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(1670,16)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(1670,16)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7) inlined into vbcrestr.f(1697,21)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7) inlined into vbcrestr.f(1697,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7) inlined into vbcrestr.f(1697,21)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(12480,7) inlined into vbcrestr.f(1697,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8427,13) inlined into vbcrestr.f(1699,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8427,13) inlined into vbcrestr.f(1699,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8429,13) inlined into vbcrestr.f(1699,21)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8429,13) inlined into vbcrestr.f(1699,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8429,13) inlined into vbcrestr.f(1699,21)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(5810,13) inlined into vbcrestr.f(1699,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(8432,13) inlined into vbcrestr.f(1699,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8432,13) inlined into vbcrestr.f(1699,21)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8432,13) inlined into vbcrestr.f(1699,21)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8432,13) inlined into vbcrestr.f(1699,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8443,10) inlined into vbcrestr.f(1699,21)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8444,10) inlined into vbcrestr.f(1699,21)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at vbcrestr.f(8444,10) inlined into vbcrestr.f(1699,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8448,10) inlined into vbcrestr.f(1699,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 8448 and  line 8448
   LOOP END

   LOOP BEGIN at vbcrestr.f(8452,10) inlined into vbcrestr.f(1699,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 8452 and  line 8452
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8466,7) inlined into vbcrestr.f(1699,21)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8466,7) inlined into vbcrestr.f(1699,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between  line 8466 and  line 8466
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(1518,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(1510,18) ]
LOOP END

LOOP BEGIN at vbcrestr.f(1556,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END

LOOP BEGIN at vbcrestr.f(1569,13)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(1586,18) ]
LOOP END

LOOP BEGIN at vbcrestr.f(1693,16)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(1695,50) ]

   LOOP BEGIN at vbcrestr.f(8426,10) inlined into vbcrestr.f(1699,21)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5812,15) ]

      LOOP BEGIN at vbcrestr.f(5807,10) inlined into vbcrestr.f(1699,21)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5812,15) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CRTERM

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(4287,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(4287,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4291,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4291,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4291,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4346,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4346,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4346,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4346,19)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4346,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(4354,19)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(4354,19)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4358,19)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4358,19)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(4358,19)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(4374,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4374,16)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4374,16)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4374,16)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4374,16)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(4383,7)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(4315,10)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(4330,36)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DETER

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(4484,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(4500,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 4512 and  line 4506
LOOP END

LOOP BEGIN at vbcrestr.f(4519,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 4524 and  line 4526
LOOP END

LOOP BEGIN at vbcrestr.f(4519,13)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(4447,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(4451,19) ]

   LOOP BEGIN at vbcrestr.f(4448,10)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(4451,19) ]

      LOOP BEGIN at vbcrestr.f(4466,13)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END

      LOOP BEGIN at vbcrestr.f(4484,13)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: IFINDO

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(5927,10)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
LOOP END
===========================================================================

Begin optimization report for: IFIND

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5838,10)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: DOUBEX

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(4838,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4838,22)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4838,22)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4838,22)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4838,22)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(4842,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4842,22)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4842,22)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4842,22)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4842,22)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(4846,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(4846,22)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4846,22)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(4846,22)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(4846,22)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7823,13) inlined into vbcrestr.f(4854,24)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7823,13) inlined into vbcrestr.f(4854,24)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7823,13) inlined into vbcrestr.f(4854,24)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7823,13) inlined into vbcrestr.f(4854,24)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7827,13) inlined into vbcrestr.f(4854,24)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7827,13) inlined into vbcrestr.f(4854,24)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7827,13) inlined into vbcrestr.f(4854,24)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7827,13) inlined into vbcrestr.f(4854,24)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(4786,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(4795,13)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

      LOOP BEGIN at vbcrestr.f(4804,16)
         remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

         LOOP BEGIN at vbcrestr.f(4806,19)
            remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

            LOOP BEGIN at vbcrestr.f(7845,17) inlined into vbcrestr.f(4854,24)
               remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

               LOOP BEGIN at vbcrestr.f(7838,13) inlined into vbcrestr.f(4854,24)
                  remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: OCCUP

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7823,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7823,13)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7823,13)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7823,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7827,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7827,13)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7827,13)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7827,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7845,17)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7838,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: NORMSTRUC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7723,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7726,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: IRANK

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(6104,10)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: LINDEP

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(6239,10)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6239,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6252,16)
<Distributed chunk1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 6257 and  line 6257
LOOP END

LOOP BEGIN at vbcrestr.f(6252,16)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6253,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6253,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6253,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6267,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(6268,20)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6279,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6280,16)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(6280,16)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(6280,16)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6293,16)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6293,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6297,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6299,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6299,19)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6302,19)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6309,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6316,19)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Peeled, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Alternate Alignment Vectorized Loop, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6320,19)
<Remainder, Distributed chunk2>
LOOP END

LOOP BEGIN at vbcrestr.f(6350,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(6352,16)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(6352,16)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(6352,16)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(6358,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(6246,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(6264,13)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(6276,28) ]

      LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(6273,18)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(6273,18)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(6291,13)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

      LOOP BEGIN at vbcrestr.f(6327,19)
         remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(6330,27) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: NORMR

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7772,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7774,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7774,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7774,13)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7774,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7780,19)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(7780,19)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at vbcrestr.f(7780,19)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Peeled, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Peeled, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Alternate Alignment Vectorized Loop, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Multiversioned v3>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at vbcrestr.f(7785,16)
   <Remainder, Multiversioned v3>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: IFINDD

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(5896,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(5878,13)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: IALIGN

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5810,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(5807,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(5812,15) ]
LOOP END
===========================================================================

Begin optimization report for: MAXI_CRESTR

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(6474,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6474,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6474,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(6480,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: SINGC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(9837,18)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(9838,18)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(9860,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(9868,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(9868,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(9868,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(9868,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(9868,21)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(9868,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9874,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(9874,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(9874,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9887,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9887,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9887,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9887,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(9887,15)
<Remainder, Distributed chunk2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(9832,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9841,15) ]

   LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(9887,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(9887,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(9887,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SINGS

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(10118,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(10118,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(10118,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(10122,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(5838,10) inlined into vbcrestr.f(10123,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at vbcrestr.f(10141,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(10149,21)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7863,13) inlined into vbcrestr.f(10149,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(10149,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(10149,21)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(10149,21)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(7868,13) inlined into vbcrestr.f(10149,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(10153,16)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(10153,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(10153,16)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(7723,10) inlined into vbcrestr.f(10160,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(10160,15)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(10160,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(10160,15)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7726,13) inlined into vbcrestr.f(10160,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(10160,15)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(10160,15)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7730,13) inlined into vbcrestr.f(10160,15)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10171,15)
<Peeled, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10171,15)
<Distributed chunk1>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10171,15)
<Remainder, Distributed chunk1>
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10171,15)
<Distributed chunk2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at vbcrestr.f(573,10) inlined into vbcrestr.f(10171,15)
<Remainder, Distributed chunk2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(10113,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(10126,15) ]

   LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(10170,15)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(10170,15)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(10815,17) inlined into vbcrestr.f(10171,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10823,17) inlined into vbcrestr.f(10171,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at vbcrestr.f(10831,17) inlined into vbcrestr.f(10171,15)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PRI

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8646,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 8648 and  line 8648
LOOP END

LOOP BEGIN at vbcrestr.f(8660,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 8661 and  line 8662
LOOP END

LOOP BEGIN at vbcrestr.f(8670,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 8671 and  line 8671
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8640,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(8667,15) ]
LOOP END
===========================================================================

Begin optimization report for: ORDERP

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7971,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7973,28)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ORDERS

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8000,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(8002,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(8004,36)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: NOBETA

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7581,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(7581,10)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7581,10)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(7581,10)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(7581,10)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at vbcrestr.f(7587,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: NOPROJ

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(7676,43)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(7702,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7706,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(7706,10)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7647,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(7651,13)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

      LOOP BEGIN at vbcrestr.f(7652,16)
         remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

         LOOP BEGIN at vbcrestr.f(7663,19)
            remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

            LOOP BEGIN at vbcrestr.f(7671,25)
               remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ORDERC

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7916,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7922,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7924,36)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(7939,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(7941,36)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PAIR

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8073,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(8079,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(8088,16)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END

      LOOP BEGIN at vbcrestr.f(8097,39)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PERMUT

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(8198,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(8205,13)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8205,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8205,13)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8219,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8219,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8219,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8219,19)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8219,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8243,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8243,22)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8243,22)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8243,22)
   <Alternate Alignment Vectorized Loop, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8243,22)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8256,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 8257 and  line 8257
LOOP END

LOOP BEGIN at vbcrestr.f(8256,22)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8269,10)
<Distributed chunk1>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8298,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(8299,16)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at vbcrestr.f(8309,19)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

            LOOP BEGIN at vbcrestr.f(8333,29)
               remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8269,10)
<Distributed chunk2>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8274,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(8281,23)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(8191,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(8212,13)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(8232,51)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PREPLI

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(8530,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(8530,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(8530,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(8538,10)
<Distributed chunk1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 8543 and  line 8543
LOOP END

LOOP BEGIN at vbcrestr.f(8538,10)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(8539,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(8539,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(8539,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(8548,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(8549,13)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(8563,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(8565,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(8570,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(7884,10) inlined into vbcrestr.f(8556,12)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(7886,28) inlined into vbcrestr.f(8556,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: REVIRT

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9523,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9523,25)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9523,25)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9523,25)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9531,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9531,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9531,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9531,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9540,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9540,19)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at vbcrestr.f(9540,19)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9540,19)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(9506,10)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(9516,27) ]

   LOOP BEGIN at vbcrestr.f(9510,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: RZERO

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9573,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9573,10)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(9573,10)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SINGEX

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(9924,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9925,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(9932,16)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(9932,16)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9932,16)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(9932,16)
         <Alternate Alignment Vectorized Loop, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9932,16)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(9936,16)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(9936,16)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9936,16)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(9936,16)
         <Alternate Alignment Vectorized Loop, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9936,16)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(9944,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(9955,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 9960 and  line 9960
      LOOP END

      LOOP BEGIN at vbcrestr.f(9965,16)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(9965,16)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9965,16)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(9965,16)
         <Alternate Alignment Vectorized Loop, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9965,16)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(9977,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(9978,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(9985,16)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at vbcrestr.f(9985,16)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9985,16)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at vbcrestr.f(9985,16)
         <Alternate Alignment Vectorized Loop, Multiversioned v2>
         LOOP END

         LOOP BEGIN at vbcrestr.f(9985,16)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END

      LOOP BEGIN at vbcrestr.f(9991,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 9996 and  line 9996
      LOOP END
   LOOP END

   LOOP BEGIN at vbcrestr.f(10004,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at vbcrestr.f(10012,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 10017 and  line 10017
      LOOP END

      LOOP BEGIN at vbcrestr.f(10012,16)
      <Remainder>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10024,16)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between  line 10029 and  line 10029
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SKIPR

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(10243,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(10245,16)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at vbcrestr.f(10245,16)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10245,16)
      <Multiversioned v2>
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at vbcrestr.f(10245,16)
      <Alternate Alignment Vectorized Loop, Multiversioned v2>
      LOOP END

      LOOP BEGIN at vbcrestr.f(10245,16)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: STRUCTC

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(10932,40)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(10962,19)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(10962,19)
   remark #15301: REVERSED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(10962,19)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(10903,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

   LOOP BEGIN at vbcrestr.f(10907,13)
      remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

      LOOP BEGIN at vbcrestr.f(10908,16)
         remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

         LOOP BEGIN at vbcrestr.f(10919,19)
            remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.

            LOOP BEGIN at vbcrestr.f(10927,25)
               remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: AIMONEWSYMB

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(11628,7)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at vbcrestr.f(11633,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at vbcrestr.f(11634,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between  line 11635 and  line 11635
   LOOP END

   LOOP BEGIN at vbcrestr.f(11634,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(11642,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 11644 and  line 11644
LOOP END
===========================================================================

Begin optimization report for: WRIT1D

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(11708,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 11709 and  line 11709
LOOP END
===========================================================================

Begin optimization report for: GENCOMB

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12196,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 12197 and  line 12197
LOOP END

LOOP BEGIN at vbcrestr.f(12196,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12208,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12208,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12228,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12228,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12239,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12239,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12250,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(12261,7)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at vbcrestr.f(12226,10)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at vbcrestr.f(12225,12)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: NEIBLIST

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(12843,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at vbcrestr.f(12844,10)
   <Peeled>
   LOOP END

   LOOP BEGIN at vbcrestr.f(12844,10)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at vbcrestr.f(12844,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10)
<Peeled>
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at vbcrestr.f(12861,10)
<Remainder>
LOOP END

LOOP BEGIN at vbcrestr.f(12910,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 12912 and  line 12916
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(12877,7)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12868,13) ]
LOOP END

LOOP BEGIN at vbcrestr.f(12901,7)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12897,16) ]

   LOOP BEGIN at vbcrestr.f(12899,10)
      remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.   [ vbcrestr.f(12897,16) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: INITSY

    Report from: Vector optimizations [vec]


LOOP BEGIN at vbcrestr.f(5999,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between  line 6000 and  line 6000
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6016,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6018,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6046,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6054,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6068,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(7527,11) inlined into vbcrestr.f(6070,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between  line 7532 and  line 7534
LOOP END

LOOP BEGIN at vbcrestr.f(6081,10)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at vbcrestr.f(6058,10)
   remark #15532: loop was not vectorized: compile time constraints prevent loop optimization. Consider using -O3.
LOOP END
===========================================================================
