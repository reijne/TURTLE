
Begin optimization report for: ZSYMM

    Report from: Vector optimizations [vec]


LOOP BEGIN at zsymm.f(198,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at zsymm.f(199,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(199,22)
         remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      LOOP END

      LOOP BEGIN at zsymm.f(199,22)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at zsymm.f(204,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at zsymm.f(205,22)
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
   LOOP END

   LOOP BEGIN at zsymm.f(205,22)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at zsymm.f(220,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at zsymm.f(221,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(224,26)
         remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(221,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(224,26)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at zsymm.f(224,26)
      LOOP END

      LOOP BEGIN at zsymm.f(224,26)
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(221,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(224,26)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at zsymm.f(224,26)
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(221,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(224,26)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at zsymm.f(224,26)
      LOOP END

      LOOP BEGIN at zsymm.f(224,26)
      LOOP END

      LOOP BEGIN at zsymm.f(224,26)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at zsymm.f(237,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at zsymm.f(238,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(241,26)
         remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(238,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(241,26)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at zsymm.f(241,26)
      LOOP END

      LOOP BEGIN at zsymm.f(241,26)
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(238,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(241,26)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at zsymm.f(241,26)
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(238,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(241,26)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END

      LOOP BEGIN at zsymm.f(241,26)
      LOOP END

      LOOP BEGIN at zsymm.f(241,26)
      LOOP END

      LOOP BEGIN at zsymm.f(241,26)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at zsymm.f(258,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at zsymm.f(261,22)
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
   LOOP END

   LOOP BEGIN at zsymm.f(265,22)
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
   LOOP END

   LOOP BEGIN at zsymm.f(269,18)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(275,22)
         remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      LOOP END

      LOOP BEGIN at zsymm.f(275,22)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(279,18)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at zsymm.f(285,22)
         remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      LOOP END

      LOOP BEGIN at zsymm.f(285,22)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at zsymm.f(261,22)
   <Remainder>
   LOOP END
LOOP END
===========================================================================
